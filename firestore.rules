
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone authenticated can read a user's public profile
      allow read: if isSignedIn();

      // A user can only create their own profile document
      allow create: if isOwner(userId);

      // A user can only update their own profile document
      allow update: if isOwner(userId);

      // Users cannot delete their profiles to prevent orphaning data
      allow delete: if false;
    }

    // Rules for the 'ads' collection
    match /ads/{adId} {
      // Anyone can read ads, as they are public listings
      allow read: if true;

      // An authenticated user can create an ad
      // We also validate that the provided userID matches the user's auth UID
      // and that the status is set to 'pending'
      allow create: if isSignedIn()
                    && request.resource.data.userID == request.auth.uid
                    && request.resource.data.status == 'pending';

      // Only the owner of the ad can update it
      // Admins could be given rights here in the future
      allow update: if isOwner(request.resource.data.userID);

      // Only the owner can delete their ad
      allow delete: if isOwner(get(/databases/$(database)/documents/ads/$(adId)).data.userID);
    }
  }
}
